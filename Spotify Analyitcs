-- Used data from Kaggle 
--created table
--imported data .csv to existing table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Who are the top 5 artists based on popularity

Select artist_name, track_name, popularity
from BIT_DB.Spotifydata
order by popularity desc
limit 5;

--Find avg popularity, danceability, energy, tempo

select avg(popularity), avg(danceability), avg(energy), avg(tempo) 
from BIT_DB.Spotifydata;

--Do the top 5 artists all have above average danceability, energy and tempo?

Select artist_name, track_name, popularity, danceability, energy, tempo
from BIT_DB.Spotifydata
order by popularity desc
limit 5;

--How many top 50 songs have above average danceability?

Select count(*) 
from BIT_DB.Spotifydata
Where danceability >= .686

--What songs were they?

select artist_name, track_name, danceability, popularity
from BIT_DB.Spotifydata
where danceability >= .686
Order by popularity DESC; 

--See if the longer songs were more or less popular. convert ms to minutes

Select artist_name, track_name, popularity, duration_ms/60000 AS Minutes
from BIT_DB.Spotifydata
order by popularity desc; 

-- want to see songs that are above 90 in popularity and 3 minutes or longer

Select artist_name, track_name, popularity, duration_ms/60000 AS Minutes
from BIT_DB.Spotifydata
Where popularity >= 90 AND Minutes >= 3
Order by Minutes Asc; 

----Calculate the average popularity for the artists in the Spotify data table.
-- Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

With popavgCTE AS (select S.artist_name, avg(S.popularity) AS Avg_popularity FROM Spotifydata AS S Group by S.artist_name)

Select artist_name, Avg_popularity, 'Top Star' AS label
FROM popavgCTE 
where Avg_popularity >= 90; 
